# Nginx Configuration for Orthanc Bridge TLS Termination
# Production-ready configuration with security headers and SSL/TLS best practices

# Main context
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Events context
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# HTTP context
http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    
    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;  # Allow large DICOM uploads
    
    # Security settings
    server_tokens off;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; connect-src 'self';" always;
    
    # SSL/TLS Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    
    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=webhook:10m rate=100r/m;
    
    # Upstream definitions
    upstream orthanc_backend {
        server orthanc:8042;
        keepalive 32;
    }
    
    upstream bridge_backend {
        server dicom-bridge:3000;
        keepalive 32;
    }
    
    # HTTP to HTTPS redirect
    server {
        listen 80;
        server_name _;
        return 301 https://$host$request_uri;
    }
    
    # Main HTTPS server for Orthanc
    server {
        listen 443 ssl http2;
        server_name orthanc.local;  # Replace with actual domain
        
        # SSL certificate configuration
        ssl_certificate /etc/nginx/certs/orthanc.crt;
        ssl_certificate_key /etc/nginx/certs/orthanc.key;
        ssl_trusted_certificate /etc/nginx/certs/ca-chain.crt;
        
        # HSTS header
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        
        # Orthanc-specific headers
        add_header X-Orthanc-Server "Nginx-Proxy" always;
        
        # Main location for Orthanc REST API
        location / {
            # Rate limiting for general API access
            limit_req zone=api burst=20 nodelay;
            
            # Proxy settings
            proxy_pass http://orthanc_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts for DICOM operations
            proxy_connect_timeout 60s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Buffer settings for large DICOM files
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            proxy_max_temp_file_size 1024m;
        }
        
        # Health check endpoint (no rate limiting)
        location /system {
            proxy_pass http://orthanc_backend/system;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Quick timeouts for health checks
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }
        
        # DICOM upload endpoints (higher limits)
        location ~ ^/(instances|studies|series|patients) {
            limit_req zone=api burst=50 nodelay;
            
            proxy_pass http://orthanc_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Extended timeouts for DICOM operations
            proxy_connect_timeout 60s;
            proxy_send_timeout 600s;
            proxy_read_timeout 600s;
            
            # Large file handling
            client_max_body_size 500M;
            proxy_request_buffering off;
        }
    }
    
    # HTTPS server for Bridge webhooks
    server {
        listen 443 ssl http2;
        server_name bridge.local;  # Replace with actual domain
        
        # SSL certificate configuration (can be same as Orthanc or separate)
        ssl_certificate /etc/nginx/certs/bridge.crt;
        ssl_certificate_key /etc/nginx/certs/bridge.key;
        ssl_trusted_certificate /etc/nginx/certs/ca-chain.crt;
        
        # HSTS header
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        
        # Bridge-specific headers
        add_header X-Bridge-Server "Nginx-Proxy" always;
        
        # Webhook endpoints with specific rate limiting
        location /api/orthanc/new-instance {
            limit_req zone=webhook burst=200 nodelay;
            
            proxy_pass http://bridge_backend/api/orthanc/new-instance;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Preserve webhook headers
            proxy_pass_request_headers on;
            
            # Webhook-specific timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # Health check endpoint
        location /health {
            proxy_pass http://bridge_backend/health;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Quick health check timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }
        
        # Admin endpoints (more restrictive)
        location /admin {
            limit_req zone=api burst=10 nodelay;
            
            # IP whitelist for admin access (customize as needed)
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
            
            proxy_pass http://bridge_backend/admin;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Default location for other bridge endpoints
        location / {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://bridge_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}